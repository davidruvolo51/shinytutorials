{"version":3,"sources":["webpack:///./src/components/layouts/article.js","webpack:///./src/components/tutorials.js"],"names":["Article","props","className","title","subtitle","abstract","date","updated","keywords","aria-label","map","tag","key","dangerouslySetInnerHTML","__html","post","BlogPost","data","markdownRemark","Array","from","frontmatter","sort","description","author","html","query"],"mappings":"2LAuEeA,MArDf,SAAiBC,GACb,OACI,6BAASC,UAAWD,EAAMC,UAAN,WAA6BD,EAAMC,UAAc,WACjE,4BAAQA,UAAU,kBACd,4BAAKD,EAAME,OACX,4BAAKF,EAAMG,UACX,2BAAIH,EAAMI,UACV,uBAAGH,UAAU,iBAAb,aAAuC,8BAAOD,EAAMK,OAEhDL,EAAMM,SAEEN,EAAMM,UAAYN,EAAMK,KAGxB,uBAAGJ,UAAU,iBAAb,WAAqC,8BAAOD,EAAMM,UAIpD,KAGNN,EAAMO,SAEE,wBAAIN,UAAU,iBAAiBO,aAAW,aAElCR,EAAMO,SAASE,KAAI,SAAAC,GAAG,OAClB,wBAAIC,IAAKD,GACL,0BAAMT,UAAS,WAAaS,GAAQA,QAMtD,MAGd,6BAAST,UAAU,eAAeW,wBAAyB,CAAEC,OAAQb,EAAMc,U,sCCbxEC,UAzBf,SAAkBf,GAGhB,IAAMc,EAAOd,EAAMgB,KAAKC,eAClBV,EAAWW,MAAMC,KAAML,EAAKM,YAAYb,SAASc,QAGvD,OACE,kBAAC,IAAD,CAAKnB,MAAOY,EAAKM,YAAYlB,MAAOoB,YAAaR,EAAKM,YAAYhB,SAAUmB,OAAO,WAAWhB,SAAUA,GACtG,kBAAC,IAAD,CAAMN,UAAU,YACd,kBAAC,EAAD,CACEa,KAAMA,EAAKU,KACXtB,MAAOY,EAAKM,YAAYlB,MACxBC,SAAUW,EAAKM,YAAYjB,SAE3BE,KAAMS,EAAKM,YAAYf,KACvBC,QAASQ,EAAKM,YAAYd,QAC1BC,SAAUA,EACVN,UAAU,kBAOLc,IACFU,EAAK","file":"component---src-components-tutorials-js-4b86f7d7552ab3be180e.js","sourcesContent":["////////////////////////////////////////////////////////////////////////////////\n// FILE: article.js\n// AUTHOR: David Ruvolo\n// CREATED: 2019-10-25\n// MODIFIED: 2019-12-15\n// PURPOSE: react component for tutorials, i.e. as articles\n// DEPENDENCIES: see below\n// STATUS: working\n// COMMENTS: requirements for this component are\n//      - post: the prop that contains the content\n//      - date: the date the post was published\n//      - updated: the date the post was updated\n//      - keywords: an array of keywords, if available\n////////////////////////////////////////////////////////////////////////////////\n// BEGIN\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport \"../styles/article.scss\"\nfunction Article(props) {\n    return (\n        <article className={props.className ? `article ${props.className}` : \"article\"}>\n            <header className=\"article-header\">\n                <h1>{props.title}</h1>\n                <h2>{props.subtitle}</h2>\n                <p>{props.abstract}</p>\n                <p className=\"article-dates\">Published:<time>{props.date}</time></p>\n                {\n                    props.updated\n                        ? (\n                            props.updated !== props.date\n                            ? (\n                                // console.log(props.updated, props.data)\n                            <p className=\"article-dates\">Updated:<time>{props.updated}</time></p>\n                            )\n                            : null\n                        )\n                        : null\n                }\n                {\n                    props.keywords\n                        ? (\n                            <ul className=\"post-meta-tags\" aria-label=\"post tags\">\n                                {\n                                    props.keywords.map(tag => (\n                                        <li key={tag}>\n                                            <code className={`tag tag-${tag}`}>{tag}</code>\n                                        </li>\n                                    ))\n                                }\n                            </ul>\n                        )\n                        : null\n                }\n            </header>\n            <section className=\"article-body\" dangerouslySetInnerHTML={{ __html: props.post }} />\n        </article>\n    )\n}\n\n// define props\nArticle.propTypes = {\n    className: PropTypes.string,\n    title: PropTypes.string,\n    subtitle: PropTypes.string,\n    abstract: PropTypes.string,\n    date: PropTypes.string,\n    updated: PropTypes.string,\n    keywords: PropTypes.array\n}\n\n// export\nexport default Article\n","////////////////////////////////////////////////////////////////////////////////\n// FILE: tutorials.js\n// AUTHOR: David Ruvolo\n// CREATED: 2019-10-25\n// MODIFIED: 2020-01-29\n// PURPOSE: layout component for tutorials\n// DEPENDENCIES: see below\n// STATUS: in.progress\n// COMMENTS: NA\n////////////////////////////////////////////////////////////////////////////////\n// BEGIN\nimport React from \"react\"\nimport { graphql } from \"gatsby\"\nimport App from \"../components/layouts/app\"\nimport Main from \"../components/layouts/main\"\nimport Article from \"../components/layouts/article\"\nfunction BlogPost(props) {\n\n  // define data\n  const post = props.data.markdownRemark;\n  const keywords = Array.from([post.frontmatter.keywords.sort()][0]);\n\n  // render\n  return (\n    <App title={post.frontmatter.title} description={post.frontmatter.abstract} author=\"dcruvolo\" keywords={keywords}>\n      <Main className=\"tutorial\">\n        <Article\n          post={post.html}\n          title={post.frontmatter.title}\n          subtitle={post.frontmatter.subtitle}\n          // abstract={post.frontmatter.abstract}\n          date={post.frontmatter.date}\n          updated={post.frontmatter.updated}\n          keywords={keywords}\n          className=\"flex-child\"\n        />\n      </Main>\n    </App>\n  )\n}\n\nexport default BlogPost\nexport const query = graphql`\n  query postQuery($slug: String!) {\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      html\n      frontmatter {\n        title\n        subtitle\n        abstract\n        date\n        updated\n        keywords\n      }\n    }\n  }\n`\n"],"sourceRoot":""}