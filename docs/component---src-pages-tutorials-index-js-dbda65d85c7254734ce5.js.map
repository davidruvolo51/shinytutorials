{"version":3,"sources":["webpack:///./src/components/layouts/hero-alt.js","webpack:///./src/components/layouts/post-entry.js","webpack:///./src/components/layouts/main.js","webpack:///./src/components/elements/searchForm.js","webpack:///./src/components/elements/resetBtn.js","webpack:///./src/components/elements/keywords.js","webpack:///./src/pages/tutorials/index.js","webpack:///./src/components/layouts/sidebar.js","webpack:///./node_modules/gatsby/node_modules/core-js/modules/_string-html.js","webpack:///./node_modules/gatsby/node_modules/core-js/modules/es6.string.link.js"],"names":["Header","props","className","title","subtitle","text","Post","css_init","css_type","isFeature","aria-labelledby","key","id","img","style","backgroundImage","height","imgHeight","titleIsLink","to","link","postStatus","data-value","date","abstract","keywords","aria-label","map","tag","i","isExternalLink","href","linkLabel","Main","children","Search","useState","query","setQuery","useEffect","q","toLowerCase","data","document","querySelectorAll","msg","querySelector","max","length","counter","e","setAttribute","classList","remove","add","innerHTML","indexOf","onSubmit","event","preventDefault","htmlFor","type","name","onChange","target","value","Reset","onClick","tags","forEach","t","d","display","KeyWordButton","keyword","string","b","filter_posts","KeyWordList","k","Tutorials","postList","allMarkdownRemark","postTotal","edges","Array","from","Set","n","node","frontmatter","flat","sort","latestPost","favoritePosts","popularPosts","description","author","fields","slug","MainIndex","SideBarLayout","SideBarPanel","caption","MainPanel","$export","fails","defined","quot","createHTML","attribute","S","String","p1","replace","module","exports","NAME","exec","O","P","F","test","split","url","this"],"mappings":"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","file":"component---src-pages-tutorials-index-js-dbda65d85c7254734ce5.js","sourcesContent":["////////////////////////////////////////////////////////////////////////////////\n// FILE: hero-alt.js\n// AUTHOR: David Ruvolo\n// CREATED: 2019-11-05\n// MODIFIED: 2019-12-15\n// PURPOSE: hero-alt is a text based hero for other pages and sections\n// DEPENDENCIES: see below\n// STATUS: working\n// COMMENTS: NA\n////////////////////////////////////////////////////////////////////////////////\n// BEGIN\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nfunction Header(props){\n    return (\n        <header className={props.className ? `hero hero-text ${props.className}` : \"hero hero-text\"}>\n            <div className=\"hero-content\">\n                <h1>{props.title}</h1>\n                {\n                    props.subtitle\n                        ? (\n                            <h2>{props.subtitle}</h2>\n                        )\n                        : null\n                }\n                {\n                    props.text\n                        ? (\n                            <p className=\"hero-text\">{props.text}</p>\n                        )\n                        : null\n                }\n            </div>\n        </header>\n    )\n}\n\n// props\nHeader.propTypes = {\n    className: PropTypes.string,\n    title: PropTypes.string,\n    subtitle: PropTypes.string,\n    text: PropTypes.string\n}\n\n// export\nexport default Header","////////////////////////////////////////////////////////////////////////////////\n// FILE: post-entry.js\n// AUTHOR: David Ruvolo\n// CREATED: 2019-10-27\n// MODIFIED: 2020-05-18\n// PURPOSE: react component for post entries\n// DEPENDENCIES: react\n// STATUS: working\n// COMMENTS:\n//      The following props are used in this component\n//          - id: unique it (useful for rendering posts in an interation)\n//          - className: optional class names\n//          - isFeature: applies css class if true \n//          - imagePath: a file path to the file\n//          - imageAlt: text for the alt description\n//          - title: post title\n//          - titleIsLink: render post title as link (logical) \n//          - link: link to the post (uses <Link />)\n//          - linkLabel: a string for link \n//          - abstract: summary of the post\n//          - date: date the post was released\n//          - keywords: an array of keywords\n//          - postStatus: add a pill indicating if post is new\n////////////////////////////////////////////////////////////////////////////////\n// BEGIN\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { Link } from \"gatsby\"\n\n// render post component\nfunction Post(props) {\n\n    // process css\n    const css_init = props.className ? `post ${props.className}` : `post`\n    const css_type = props.isFeature ? `${css_init} post-feature` : `${css_init} post-plain`;\n\n    // process card type\n\n\n    // return component\n    return (\n        <div className={css_type} aria-labelledby={props.title} key={props.id ? props.id : null}>\n            {\n                // should an image by rendered\n                props.img\n                    ? (\n                        <div className=\"post-image\" style={{ backgroundImage: `url(${props.img})`, height: `${props.imgHeight ? props.imgHeight : \"250px\"}` }} />\n                    )\n                    : null\n            }\n            {\n                // should a link be rendered\n                props.titleIsLink\n                    ? (\n                        <h3 id={props.title} className=\"post-title-link\">\n                            <Link to={props.link}>{props.title}</Link>\n                            {\n                                props.postStatus\n                                    ? <span className=\"post-status\" data-value={props.postStatus}>{props.postStatus}</span>\n                                    : null\n                            }\n                        </h3>\n                    )\n                    : (\n                        <h3 id={props.title} className=\"post-title\">\n                            {props.title}\n                            {\n                                props.postStatus\n                                    ? <span className=\"post-status\" data-value={props.postStatus}>{props.postStatus}</span>\n                                    : null\n                            }\n                        </h3>\n                    )\n            }\n            {\n                // publication date\n                props.date\n                    ? (\n                        <time className=\"post-date\">{props.date}</time>\n                    )\n                    : null\n            }\n            {\n                props.abstract\n                    ? <p className=\"post-desc\">{props.abstract}</p>\n                    : null\n            }\n            {\n                // keywords\n                props.keywords\n                    ? (\n                        <ul className=\"post-tags\" aria-label=\"post tags\">\n                            {\n                                props.keywords.map((tag, i) => (\n                                    <li key={i}>\n                                        <code className={`tag tag-${tag}`}>{tag}</code>\n                                    </li>\n                                ))\n                            }\n                        </ul>\n                    )\n                    : null\n            }\n            {\n                props.link\n                    ? (\n                        // some logic to determine if the input link is internal or external\n                        props.isExternalLink\n                            ? <a href={props.link} className=\"post-link\">{props.linkLabel}</a>\n                            : <Link to={props.link} className=\"post-link\">{props.linkLabel}</Link>\n                    )\n                    : null\n            }\n        </div>\n    )\n}\n\n// PROPS\nPost.propTypes = {\n    className: PropTypes.string,\n    isFeature: PropTypes.bool,\n    titleIsLink: PropTypes.bool,\n    img: PropTypes.string,\n    imgHeight: PropTypes.string,\n    title: PropTypes.string,\n    link: PropTypes.string,\n    date: PropTypes.string,\n    keywords: PropTypes.array,\n    postStatus: PropTypes.string\n}\n\n// EXPORT \nexport default Post","////////////////////////////////////////////////////////////////////////////////\n// FILE: main.js\n// AUTHOR: David Ruvolo\n// CREATED: 2019-10-25\n// MODIFIED: 2020-04-22\n// PURPOSE: react component for <main> layout\n// DEPENDENCIES: NA\n// STATUS: working\n// COMMENTS: NA\n////////////////////////////////////////////////////////////////////////////////\n// BEGIN\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nfunction Main(props){\n    return (\n        <main id=\"main\" className={ props.className ? `main ${props.className}` : \"main\"} aria-label=\"main content\" style={props.style ? props.style : null}>\n            {props.children}\n        </main>\n    )\n}\n\n// set props\nMain.propTypes = {\n    className: PropTypes.string\n}\n\n// export\nexport default Main","////////////////////////////////////////////////////////////////////////////////\n// FILE: searchForm.js\n// AUTHOR: David Ruvolo\n// CREATED: 2019-11-06\n// MODIFIED: 2020-05-19\n// PURPOSE: react component for search\n// DEPENDENCIES: react\n// STATUS: working\n// COMMENTS: NA\n////////////////////////////////////////////////////////////////////////////////\n// BEGIN\nimport React, { useState, useEffect } from 'react'\nfunction Search(props) {\n\n    // on submit\n    const onSubmit = (event) => {\n        event.preventDefault()\n    }\n\n    // setState\n    const [query, setQuery] = useState('');\n    const onChange = (event) => {\n        event.preventDefault();\n        setQuery(event.target.value);\n    }\n\n    // filter html elements function\n    useEffect(() => {\n        let q = query.toLowerCase();\n        let data = document.querySelectorAll(\".searchable\");\n        let msg = document.querySelector(\".no-results-post\");\n        let max = data.length;\n        let counter = 0;\n\n        // search -- show/hide results\n        if (q === \"\") {\n            for (var e = 0; e < data.length; e++) {\n                data[e].setAttribute(\"aria-hidden\", \"false\");\n                data[e].classList.remove(\"visually-hidden\");\n                counter = 0;\n                msg.setAttribute(\"aria-hidden\", \"true\");\n                msg.classList.add(\"visually-hidden\");\n            }\n        } else {\n\n            // run through all \".posts\" and show/hide div based on the query\n            for (var i = 0; i < data.length; i++) {\n                if (data[i].innerHTML.toLowerCase().indexOf(q) > 0) {\n                    data[i].setAttribute(\"aria-hidden\", \"false\");\n                    data[i].classList.remove(\"visually-hidden\");\n                } else {\n                    data[i].setAttribute(\"aria-hidden\", \"true\");\n                    data[i].classList.add(\"visually-hidden\");\n                    counter = counter + 1;\n                }\n            }\n\n            if (counter === max) {\n                msg.setAttribute(\"aria-hidden\", \"false\");\n                msg.classList.remove(\"visually-hidden\");\n            }\n        }\n    }, [query])\n\n    // render component\n    return (\n        <form className=\"form post-form\" aria-label=\"search for tutorials\" onSubmit={onSubmit}>\n            <label className=\"input-label\" htmlFor=\"search\">Search for a Tutorial</label>\n            <p className=\"input-example\">Search by tag, keyword, title, date, or anything else. For example: \"css\", \"2018\", or \"drag and drop\".</p>\n            <input className=\"input input-select\" type=\"search\" name=\"search\" id=\"search\" onChange={onChange} />\n        </form>\n    )\n}\n\nexport default Search\n","////////////////////////////////////////////////////////////////////////////////\n// FILE: resetBtn.js\n// AUTHOR: David Ruvolo\n// CREATED: 2019-11-06\n// MODIFIED: 2020-04-23\n// PURPOSE: react component for reset button\n// DEPENDENCIES: React\n// STATUS: working\n// COMMENTS: NA\n////////////////////////////////////////////////////////////////////////////////\n// BEGIN\nimport React from 'react'\nfunction Reset(props) {\n    function reset_filters() {\n        const tags = document.querySelectorAll(\".btn-keyword\");\n        const data = document.querySelectorAll(\".post\");\n        tags.forEach(t => t.classList.remove(\"selected\"));\n        data.forEach(d => d.style.display = \"block\");\n    }\n    return(\n        <button id=\"reset\" className=\"btn btn-secondary\" onClick={reset_filters}>Reset</button>\n    )\n}\nexport default Reset","////////////////////////////////////////////////////////////////////////////////\n// FILE: keywordButton.js\n// AUTHOR: David Ruvolo\n// CREATED: 2019-10-25\n// MODIFIED: 2020-04-22\n// PURPOSE: react component for taglist filters\n// DEPENDENCIES: see below\n// STATUS: working\n// COMMENTS: NA\n////////////////////////////////////////////////////////////////////////////////\nimport React from 'react'\nimport PropTypes from \"prop-types\"\n\n// functional component for individual button\nfunction KeyWordButton(props) {\n\n\t// function that filters all posts\n\tfunction filter_posts(string) {\n\t\t\n\t\t// define vars and select elements\n\t\tlet query = string.toLowerCase();\n\t\tlet data = document.querySelectorAll(\".searchable\");\n\t\tdocument.querySelectorAll(\".btn-keyword\").forEach(b => b.classList.remove(\"selected\"));\n\t\tdocument.querySelector(`*[query=${string}`).classList.add(\"selected\")\n\n\t\t// search -- show/hide results\n\t\tif (query === \"\") {\n\t\t\tfor (var e = 0; e < data.length; e++) {\n\t\t\t\tdata[e].style.display = \"block\";\n\t\t\t}\n\t\t} else {\n\n\t\t\t// run through all \".posts\" and show/hide div based on the query\n\t\t\tfor (var i = 0; i < data.length; i++) {\n\t\t\t\tif (data[i].innerHTML.toLowerCase().indexOf(query) > 0) {\n\t\t\t\t\tdata[i].style.display = \"block\";\n\t\t\t\t} else {\n\t\t\t\t\tdata[i].style.display = \"none\";\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// render\n\treturn (\n\t\t<button className=\"btn btn-keyword\" query={props.keyword} key={props.keyword} onClick={() => { filter_posts(props.keyword) }}>\n\t\t\t{props.keyword}\n\t\t</button>\n\t)\n}\n\n// define keywords list\nfunction KeyWordList(props){\n    return (\n        <ul className={ props.className ? `taglist ${props.className}` : \"taglist\"}>\n            {\n              props.keywords.map((key, k) => (\n                <li key={k} className=\"taglist-item\">\n                  <KeyWordButton key={k} keyword={key} />\n                </li>\n              ))\n            }\n        </ul>\n    )\n}\n\n// define proptypes for list\nKeyWordList.propTypes = {\n\tclassName: PropTypes.string,\n\tkeywords: PropTypes.array.isRequired\n  }\n\nexport default KeyWordList","////////////////////////////////////////////////////////////////////////////////\n// FILE: tutorials.js\n// AUTHOR: David Ruvolo\n// CREATED: 2019-11-05\n// MODIFIED: 2020-07-01\n// PURPOSE: tutorials index page\n// DEPENDENCIES: see below\n// STATUS: working\n// COMMENTS: NA\n////////////////////////////////////////////////////////////////////////////////\n// BEGIN\nimport React from \"react\"\nimport { graphql } from \"gatsby\"\n\n// import layout components\nimport App from \"../../components/layouts/app\"\nimport Hero from \"../../components/layouts/hero-alt\"\nimport Main from \"../../components/layouts/main\"\nimport Search from \"../../components/elements/searchForm\"\nimport Reset from \"../../components/elements/resetBtn\"\nimport Post from \"../../components/layouts/post-entry\"\nimport KeywordList from \"../../components/elements/keywords\"\nimport { SideBarLayout, SideBarPanel, MainPanel } from \"../../components/layouts/sidebar\"\n\nfunction Tutorials(props) {\n\n\t// get posts data\n\tconst postList = props.data.allMarkdownRemark;\n\tconst postTotal = postList.edges.length;\n\tconst keywords = Array.from([...new Set(postList.edges.map(n => n.node.frontmatter.keywords).flat().sort())])\n\n\t// define posts arrays for creating entry pills\n\tconst latestPost = postList.edges[0].node.frontmatter.title;\n\tconst favoritePosts = [\"shinyTravel\", \"Drag and Drop Example\"];\n\tconst popularPosts = [\"Using Rmarkdown files in Shiny\", \"Linking Tabs - Part 3\"];\n\n\treturn (\n\t\t<App\n\t\t\ttitle=\"tutorials\"\n\t\t\tdescription=\"A collection of methods and techniques for building shiny apps\"\n\t\t\tauthor=\"dcruvolo\"\n\t\t\tkeywords={[\"shiny\", \"shiny tutorials\", \"r\", \"shiny examples\"]}\n\t\t>\n\t\t\t<Hero\n\t\t\t\ttitle=\"Available Tutorials\"\n\t\t\t\ttext={`There are ${postTotal} tutorials available and there are more on the way. Search for a tutorial by name, topic, date or keyword.`}\n\t\t\t/>\n\t\t\t<Main>\n\t\t\t\t<SideBarLayout className=\"tutorial-index\">\n\t\t\t\t\t<SideBarPanel className=\"flex-child\" title=\"Filter Tutorials\">\n\t\t\t\t\t\t<KeywordList keywords={keywords} />\n\t\t\t\t\t\t<Reset />\n\t\t\t\t\t</SideBarPanel>\n\t\t\t\t\t<MainPanel>\n\t\t\t\t\t\t<Search />\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t// map nodes -> blog post lists\n\t\t\t\t\t\t\tpostList.edges.map(({ node }, i) => {\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t<Post\n\t\t\t\t\t\t\t\t\t\tclassName={i === 0 ? \"searchable latest-post\" : \"searchable\"}\n\t\t\t\t\t\t\t\t\t\ttitle={node.frontmatter.title}\n\t\t\t\t\t\t\t\t\t\ttitleIsLink={true}\n\t\t\t\t\t\t\t\t\t\tlink={node.fields.slug}\n\t\t\t\t\t\t\t\t\t\tlinkLabel=\"Read\"\n\t\t\t\t\t\t\t\t\t\tabstract={node.frontmatter.abstract}\n\t\t\t\t\t\t\t\t\t\tdate={node.frontmatter.date}\n\t\t\t\t\t\t\t\t\t\tkeywords={node.frontmatter.keywords}\n\t\t\t\t\t\t\t\t\t\tid={`${node.frontmatter.title}-${i}`}\n\t\t\t\t\t\t\t\t\t\tkey={i}\n\t\t\t\t\t\t\t\t\t\tpostStatus={\n\t\t\t\t\t\t\t\t\t\t\tlatestPost.indexOf(node.frontmatter.title) > -1 \n\t\t\t\t\t\t\t\t\t\t\t? \"New\"\n\t\t\t\t\t\t\t\t\t\t\t: popularPosts.indexOf(node.frontmatter.title) > -1\n\t\t\t\t\t\t\t\t\t\t\t\t? \"Popular\" \n\t\t\t\t\t\t\t\t\t\t\t\t: favoritePosts.indexOf(node.frontmatter.title) > -1\n\t\t\t\t\t\t\t\t\t\t\t\t\t? \"Favorite\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t: null\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t}\n\t\t\t\t\t\t<Post\n\t\t\t\t\t\t\tclassName=\"no-results-post visually-hidden\"\n\t\t\t\t\t\t\tabstract=\"No tutorials were found\"\n\t\t\t\t\t\t\tid=\"search-msg\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</MainPanel>\n\t\t\t\t</SideBarLayout>\n\t\t\t</Main>\n\t\t</App>\n\t)\n}\n\nexport default Tutorials\n\n// define query\nexport const MainIndex = graphql`\n  query MainIndex {\n    allMarkdownRemark(sort: { order: DESC, fields: [frontmatter___date] }) {\n      edges {\n        node {\n          fields {\n            slug\n          }\n          frontmatter {\n\t\t\tabstract\n            date\n            title\n\t\t\tkeywords\n\t\t\tupdated\n          }\n        }\n      }\n    }\n  }\n`","////////////////////////////////////////////////////////////////////////////////\n// FILE: sidebar.js\n// AUTHOR: David Ruvolo\n// CREATED: 2019-10-25\n// MODIFIED: 2020-04-22\n// PURPOSE: react component for sidebar layout with collapsible sidebar panel\n// DEPENDENCIES: react\n// STATUS: working\n// COMMENTS: NA\n////////////////////////////////////////////////////////////////////////////////\n// BEGIN\nimport React from \"react\"\n\n// parent component\nfunction SideBarLayout(props) {\n    return (\n        <div className={props.className ? `sidebar-layout ${props.className}` : \"sidebar-layout\"}>\n            {props.children}\n        </div>\n    )\n}\n\n// sidebar panel with collapsible section\nfunction SideBarPanel(props) {\n    return (\n        <aside className={props.className ? `sidebar-panel ${props.className}` : \"sidebar-panel\"}>\n            <section className=\"sidebar-content\">\n                { props.title ? <h2 className=\"sidebar-title\">{props.title}</h2> : null }\n                { props.caption ? <p className=\"sidebar-caption\">{props.caption}</p> : null }\n                { props.children }\n            </section>\n        </aside>\n    )\n}\n\n// main panel\nfunction MainPanel(props) {\n    return (\n        <div className={props.className ? `main-panel ${props.className}` : \"main-panel\"}>\n            {props.children}\n        </div>\n    )\n}\n\n// export\nexport { SideBarLayout, SideBarPanel, MainPanel }","var $export = require('./_export');\nvar fails = require('./_fails');\nvar defined = require('./_defined');\nvar quot = /\"/g;\n// B.2.3.2.1 CreateHTML(string, tag, attribute, value)\nvar createHTML = function (string, tag, attribute, value) {\n  var S = String(defined(string));\n  var p1 = '<' + tag;\n  if (attribute !== '') p1 += ' ' + attribute + '=\"' + String(value).replace(quot, '&quot;') + '\"';\n  return p1 + '>' + S + '</' + tag + '>';\n};\nmodule.exports = function (NAME, exec) {\n  var O = {};\n  O[NAME] = exec(createHTML);\n  $export($export.P + $export.F * fails(function () {\n    var test = ''[NAME]('\"');\n    return test !== test.toLowerCase() || test.split('\"').length > 3;\n  }), 'String', O);\n};\n","'use strict';\n// B.2.3.10 String.prototype.link(url)\nrequire('./_string-html')('link', function (createHTML) {\n  return function link(url) {\n    return createHTML(this, 'a', 'href', url);\n  };\n});\n"],"sourceRoot":""}