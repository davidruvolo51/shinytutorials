{"version":3,"sources":["webpack:///./src/components/layouts/hero-alt.js","webpack:///./src/components/layouts/post-entry.js","webpack:///./node_modules/core-js/modules/_string-html.js","webpack:///./src/components/layouts/main.js","webpack:///./src/components/layouts/sidebar.js","webpack:///./src/components/elements/searchForm.js","webpack:///./src/components/elements/resetBtn.js","webpack:///./src/components/elements/keywordButton.js","webpack:///./src/components/elements/tagsList.js","webpack:///./src/pages/tutorials/index.js","webpack:///./node_modules/core-js/modules/es6.string.link.js"],"names":["Header","props","className","title","subtitle","text","Post","css_init","css_type","isFeature","aria-labelledby","key","id","img","style","backgroundImage","height","imgHeight","titleIsLink","to","link","abstract","data","keywords","aria-label","date","map","tag","i","pattern","RegExp","match","href","linkLabel","isExternalLink","$export","fails","defined","quot","createHTML","string","attribute","value","S","String","p1","replace","module","exports","NAME","exec","O","P","F","test","toLowerCase","split","length","Main","children","Sidebar","Search","state","query","results","handleSubmit","event","preventDefault","search","target","filterPostsByString","setState","q","document","querySelectorAll","e","display","innerHTML","indexOf","render","onSubmit","this","htmlFor","type","name","onChange","Component","Reset","reset","resetForm","tags","forEach","t","classList","remove","d","onClick","KeyWordButton","filterByKeyword","keyword","filterPostsByKeywordButton","isActive","addActiveClass","b","querySelector","add","Taglist","k","Tutorials","postList","allMarkdownRemark","Array","from","Set","edges","n","node","frontmatter","flat","sort","description","author","fields","slug","MainIndex","url"],"mappings":"6FAAA,yBA8CeA,IAjCf,SAAgBC,GACZ,OACI,4BAAQC,UAAWD,EAAMC,UAAN,kBAAoCD,EAAMC,UAAc,kBACvE,yBAAKA,UAAU,gBACX,4BAAKD,EAAME,OAEPF,EAAMG,SAEE,4BAAKH,EAAMG,UAEb,KAGNH,EAAMI,KAEE,uBAAGH,UAAU,aAAaD,EAAMI,MAElC,S,+GCuGXC,IAxFf,SAAcL,GAGV,IAAMM,EAAWN,EAAMC,UAAN,QAA0BD,EAAMC,UAAhC,OACXM,EAAWP,EAAMQ,UAAeF,EAArB,gBAAkDA,EAAlD,cAGjB,OACI,yBAAKL,UAAWM,EAAUE,kBAAiBT,EAAME,MAAOQ,IAAKV,EAAMW,GAAKX,EAAMW,GAAK,MAG3EX,EAAMY,IAEE,yBAAKX,UAAU,aAAaY,MAAO,CAAEC,gBAAgB,OAAQd,EAAMY,IAAf,IAAuBG,OAAO,IAAIf,EAAMgB,UAAYhB,EAAMgB,UAAY,YAE5H,KAINhB,EAAMiB,YAEE,wBAAIN,GAAIX,EAAME,MAAOD,UAAU,mBAC3B,kBAAC,IAAD,CAAMiB,GAAIlB,EAAMmB,MAAOnB,EAAME,QAIjC,wBAAIS,GAAIX,EAAME,MAAOD,UAAU,cAAcD,EAAME,OAG/D,uBAAGD,UAAU,aAAaD,EAAMoB,UAE5BpB,EAAMqB,MAAQrB,EAAMsB,SAEZ,wBAAIrB,UAAU,YAAYsB,aAAW,gBAE7BvB,EAAMwB,KAEE,wBAAIvB,UAAU,kBACV,0BAAMA,UAAU,aAAaD,EAAMwB,OAGzC,KAGNxB,EAAMsB,SAEE,wBAAIrB,UAAU,kBACV,wBAAIA,UAAU,iBAAiBsB,aAAW,aAElCvB,EAAMsB,SAASG,KAAI,SAACC,EAAKC,GAAN,OACf,wBAAIjB,IAAKiB,GACL,0BAAM1B,UAAS,WAAayB,GAAQA,SAO1D,MAIhB,KAIN1B,EAAMmB,KAjFtB,SAAwBnB,GAGpB,IAAM4B,EAAU,IAAIC,OAAO,QAC3B,OAAI7B,EAAMmB,KAAKW,MAAMF,GACV,uBAAGG,KAAM/B,EAAMmB,KAAMlB,UAAU,aAAaD,EAAMgC,WAGvC,MAAlBhC,EAAMmB,KAAK,GACJ,kBAAC,IAAD,CAAMD,GAAIlB,EAAMmB,KAAMlB,UAAU,aAAaD,EAAMgC,gBAD9D,EA0EkBC,CAAejC,GACf,Q,4CCjHtB,IAAIkC,EAAU,EAAQ,QAClBC,EAAQ,EAAQ,QAChBC,EAAU,EAAQ,QAClBC,EAAO,KAEPC,EAAa,SAAUC,EAAQb,EAAKc,EAAWC,GACjD,IAAIC,EAAIC,OAAOP,EAAQG,IACnBK,EAAK,IAAMlB,EAEf,MADkB,KAAdc,IAAkBI,GAAM,IAAMJ,EAAY,KAAOG,OAAOF,GAAOI,QAAQR,EAAM,UAAY,KACtFO,EAAK,IAAMF,EAAI,KAAOhB,EAAM,KAErCoB,EAAOC,QAAU,SAAUC,EAAMC,GAC/B,IAAIC,EAAI,GACRA,EAAEF,GAAQC,EAAKX,GACfJ,EAAQA,EAAQiB,EAAIjB,EAAQkB,EAAIjB,GAAM,WACpC,IAAIkB,EAAO,GAAGL,GAAM,KACpB,OAAOK,IAASA,EAAKC,eAAiBD,EAAKE,MAAM,KAAKC,OAAS,KAC7D,SAAUN,K,kCCjBhB,mCA4BeO,IAdf,SAAczD,GACV,OACI,0BAAMW,GAAG,OAAOV,UAAYD,EAAMC,UAAN,QAA0BD,EAAMC,UAAc,OAAQsB,aAAW,eAAeV,MAAOb,EAAMa,MAAQb,EAAMa,MAAQ,MAC1Ib,EAAM0D,Y,qRCIJC,MATf,SAAiB3D,GACb,OACI,2BAAOC,UAAWD,EAAMC,UAAN,WAA6BD,EAAMC,UAAc,WAC/D,6BAASA,UAAU,mBACdD,EAAM0D,Y,wBCqDRE,E,6PArDXC,MAAQ,CACJC,MAAO,GACPC,QAAS,I,EAIbC,aAAe,SAACC,GACZA,EAAMC,kB,EA6BVC,OAAS,SAACF,GACN,IAAMH,EAAQG,EAAMG,OAAO3B,MACrBsB,EAAU,EAAKM,oBAAoBP,GACzC,EAAKQ,SAAS,CAACP,UAASD,W,6BA5B5BO,oBAAA,SAAoB9B,GAGhB,IAAIgC,EAAIhC,EAAOe,cACXjC,EAAOmD,SAASC,iBAAiB,eAGrC,GAAS,KAANF,EACC,IAAI,IAAIG,EAAE,EAAGA,EAAIrD,EAAKmC,OAAQkB,IAC1BrD,EAAKqD,GAAG7D,MAAM8D,QAAU,aAK5B,IAAI,IAAIhD,EAAI,EAAGA,EAAIN,EAAKmC,OAAQ7B,IACzBN,EAAKM,GAAGiD,UAAUtB,cAAcuB,QAAQN,GAAK,EAC5ClD,EAAKM,GAAGd,MAAM8D,QAAU,QAExBtD,EAAKM,GAAGd,MAAM8D,QAAU,Q,EAaxCG,OAAA,WACI,OACA,0BAAM7E,UAAU,OAAOsB,aAAW,uBAAuBwD,SAAUC,KAAKhB,cACpE,2BAAO/D,UAAU,cAAcgF,QAAQ,UAAvC,yBACA,uBAAGhF,UAAU,iBAAb,gEACA,2BAAOA,UAAU,qBAAqBiF,KAAK,SAASC,KAAK,SAASxE,GAAG,SAAS8B,MAAOuC,KAAKnB,MAAMC,MAAOsB,SAAUJ,KAAKb,W,GAlD7GkB,a,ICyBNC,E,6PAXXC,MAAQ,SAACtB,GACL,EAAKuB,a,6BAbTA,UAAA,WAGI,IAAMC,EAAOjB,SAASC,iBAAiB,gBACjCpD,EAAOmD,SAASC,iBAAiB,SAGvCgB,EAAKC,SAAQ,SAAAC,GAAC,OAAIA,EAAEC,UAAUC,OAAO,eACrCxE,EAAKqE,SAAQ,SAAAI,GAAC,OAAIA,EAAEjF,MAAM8D,QAAU,Y,EAQxCG,OAAA,WACI,OACI,4BAAQnE,GAAG,QAAQV,UAAU,oBAAoB8F,QAASf,KAAKO,OAA/D,kB,GArBQF,a,ICuDLW,E,qHArDX,WAAYhG,GAAQ,IAAD,SACjB,cAAMA,IAAN,MAqCFiG,gBAAkB,SAAChC,GACjB,IAAMH,EAAQ,EAAK9D,MAAMkG,QACzB,EAAKC,2BAA2BrC,IAtChC,EAAKD,MAAQ,CAAEuC,UAAU,GAFR,E,2BAKnBC,eAAA,WACErB,KAAKV,SAAS,CAAE8B,UAAWpB,KAAKnB,MAAMuC,Y,EAIxCD,2BAAA,SAA2B5D,GAGzB,IAAIgC,EAAIhC,EAAOe,cACXjC,EAAOmD,SAASC,iBAAiB,eAOrC,GAJAD,SAASC,iBAAiB,aAAaiB,SAAQ,SAAAY,GAAC,OAAIA,EAAEV,UAAUC,OAAO,eACvErB,SAAS+B,cAAT,YAAmCvB,KAAKhF,MAAMkG,QAA9C,MAA2DN,UAAUY,IAAI,YAGhE,KAANjC,EACC,IAAI,IAAIG,EAAE,EAAGA,EAAIrD,EAAKmC,OAAQkB,IAC1BrD,EAAKqD,GAAG7D,MAAM8D,QAAU,aAK5B,IAAI,IAAIhD,EAAI,EAAGA,EAAIN,EAAKmC,OAAQ7B,IACzBN,EAAKM,GAAGiD,UAAUtB,cAAcuB,QAAQN,GAAK,EAC5ClD,EAAKM,GAAGd,MAAM8D,QAAU,QAExBtD,EAAKM,GAAGd,MAAM8D,QAAU,Q,EAWtCG,OAAA,WACI,OACE,4BAAQ7E,UAAU,kBAAkBS,IAAKsE,KAAKhF,MAAMkG,QAASpC,MAAOkB,KAAKhF,MAAMkG,QAASH,QAASf,KAAKiB,iBACnGjB,KAAKhF,MAAMkG,U,GAhDIb,aCuBboB,MArBf,SAAiBzG,GACb,OACI,wBAAIC,UAAYD,EAAMC,UAAN,WAA6BD,EAAMC,UAAc,WAE3DD,EAAMsB,SAASG,KAAI,SAACf,EAAKgG,GAAN,OACjB,wBAAIhG,IAAKgG,EAAGzG,UAAU,gBACpB,kBAAC,EAAD,CAAeS,IAAKgG,EAAGR,QAASxF,U,svBCmDnCiG,UA/Cf,SAAmB3G,GAGlB,IAAM4G,EAAW5G,EAAMqB,KAAKwF,kBACtBvF,EAAWwF,MAAMC,KAAN,EAAe,IAAIC,IAAIJ,EAASK,MAAMxF,KAAI,SAAAyF,GAAC,OAAIA,EAAEC,KAAKC,YAAY9F,YAAU+F,OAAOC,UAEjG,OACI,kBAAC,IAAD,CACLpH,MAAM,YACNqH,YAAY,iEACZC,OAAO,WACPlG,SAAU,CAAC,QAAS,kBAAmB,IAAK,mBAE5C,kBAAC,IAAD,CAAMpB,MAAM,sBAAsBE,KAAK,+GACvC,kBAAC,IAAD,KACC,yBAAKH,UAAU,yCACd,kBAAC,EAAD,CAASA,UAAU,qCAClB,wBAAIA,UAAU,cAAd,oBACA,uBAAGA,UAAU,gBAAb,oBACA,kBAAC,EAAD,CAAUqB,SAAWA,IACrB,kBAAC,EAAD,OAED,6BAASrB,UAAU,mCAClB,kBAAC,EAAD,MAGC2G,EAASK,MAAMxF,KAAI,WAAWE,GAAX,IAAGwF,EAAH,EAAGA,KAAH,OAClB,kBAAC,IAAD,CACClH,UAAU,aACVC,MAAOiH,EAAKC,YAAYlH,MACxBe,aAAa,EACbE,KAAMgG,EAAKM,OAAOC,KAClB1F,UAAU,OACVZ,SAAU+F,EAAKC,YAAYhG,SAC3BI,KAAM2F,EAAKC,YAAY5F,KACvBF,SAAU6F,EAAKC,YAAY9F,SAC3BX,GAAOwG,EAAKC,YAAYlH,MAAtB,IAA+ByB,YAW3BgF,IAGFgB,EAAS,c,kCCxEtB,EAAQ,OAAR,CAA0B,QAAQ,SAAUrF,GAC1C,OAAO,SAAcsF,GACnB,OAAOtF,EAAW0C,KAAM,IAAK,OAAQ4C","file":"component---src-pages-tutorials-index-js-f6f275a180212931ad95.js","sourcesContent":["////////////////////////////////////////////////////////////////////////////////\n// FILE: hero-alt.js\n// AUTHOR: David Ruvolo\n// CREATED: 2019-11-05\n// MODIFIED: 2019-12-15\n// PURPOSE: hero-alt is a text based hero for other pages and sections\n// DEPENDENCIES: see below\n// STATUS: working\n// COMMENTS: NA\n////////////////////////////////////////////////////////////////////////////////\n// BEGIN\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nfunction Header(props){\n    return (\n        <header className={props.className ? `hero hero-text ${props.className}` : \"hero hero-text\"}>\n            <div className=\"hero-content\">\n                <h1>{props.title}</h1>\n                {\n                    props.subtitle\n                        ? (\n                            <h2>{props.subtitle}</h2>\n                        )\n                        : null\n                }\n                {\n                    props.text\n                        ? (\n                            <p className=\"hero-text\">{props.text}</p>\n                        )\n                        : null\n                }\n            </div>\n        </header>\n    )\n}\n\n// props\nHeader.propTypes = {\n    className: PropTypes.string,\n    title: PropTypes.string,\n    subtitle: PropTypes.string,\n    text: PropTypes.string\n}\n\n// export\nexport default Header","////////////////////////////////////////////////////////////////////////////////\n// FILE: post-entry.js\n// AUTHOR: David Ruvolo\n// CREATED: 2019-10-27\n// MODIFIED: 2020-03-26\n// PURPOSE: react component for post entries\n// DEPENDENCIES: react\n// STATUS: working\n// COMMENTS:\n//      The following props are used in this component\n//          - id: unique it (useful for rendering posts in an interation)\n//          - className: optional class names\n//          - isFeature: applies css class if true \n//          - imagePath: a file path to the file\n//          - imageAlt: text for the alt description\n//          - title: post title\n//          - titleIsLink: render post title as link (logical) \n//          - link: link to the post (uses <Link />)\n//          - linkLabel: a string for link \n//          - abstract: summary of the post\n//          - date: date the post was released\n//          - keywords: an array of keywords\n////////////////////////////////////////////////////////////////////////////////\n// BEGIN\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { Link } from \"gatsby\"\nimport \"../styles/post-entry.scss\"\n\n// process link: is it an internal or external link?\nfunction isExternalLink(props) {\n\n    // match for external pattern - http will catch https\n    const pattern = new RegExp(\"http\");\n    if (props.link.match(pattern)) {\n        return <a href={props.link} className=\"post-link\">{props.linkLabel}</a>;\n    }\n    // match for internal pattern\n    if (props.link[0] === \"/\") {\n        return <Link to={props.link} className=\"post-link\">{props.linkLabel}</Link>\n    }\n\n}\n\n// render post component\nfunction Post(props) {\n\n    // process css\n    const css_init = props.className ? `post ${props.className}` : `post`\n    const css_type = props.isFeature ? `${css_init} post-feature` : `${css_init} post-plain`;\n\n    // return component\n    return (\n        <div className={css_type} aria-labelledby={props.title} key={props.id ? props.id : null}>\n            {\n                // should an image by rendered\n                props.img\n                    ? (\n                        <div className=\"post-image\" style={{ backgroundImage: `url(${props.img})`, height: `${props.imgHeight ? props.imgHeight : \"250px\"}` }} />\n                    )\n                    : null\n            }\n            {\n                // should a link be rendered\n                props.titleIsLink\n                    ? (\n                        <h3 id={props.title} className=\"post-title-link\">\n                            <Link to={props.link}>{props.title}</Link>\n                        </h3>\n                    )\n                    : (\n                        <h3 id={props.title} className=\"post-title\">{props.title}</h3>\n                    )\n            }\n            <p className=\"post-desc\">{props.abstract}</p>\n            {\n                props.data || props.keywords\n                    ? (\n                        <ul className=\"post-meta\" aria-label=\"post details\">\n                            {\n                                props.date\n                                    ? (\n                                        <li className=\"post-meta-item\">\n                                            <span className=\"post-date\">{props.date}</span>\n                                        </li>\n                                    )\n                                    : null\n                            }\n                            {\n                                props.keywords\n                                    ? (\n                                        <li className=\"post-meta-item\">\n                                            <ul className=\"post-meta-tags\" aria-label=\"post tags\">\n                                                {\n                                                    props.keywords.map((tag, i) => (\n                                                        <li key={i}>\n                                                            <code className={`tag tag-${tag}`}>{tag}</code>\n                                                        </li>\n                                                    ))\n                                                }\n                                            </ul>\n                                        </li>\n                                    )\n                                    : null\n                            }\n                        </ul>\n                    )\n                    : null\n            }\n            {\n                // some logic to determine if the input link is internal or external\n                props.link\n                    ? isExternalLink(props)\n                    : null\n            }\n        </div>\n    )\n}\n\n// PROPS\nPost.propTypes = {\n    className: PropTypes.string,\n    isFeature: PropTypes.bool,\n    titleIsLink: PropTypes.bool,\n    img: PropTypes.string,\n    imgHeight: PropTypes.string,\n    title: PropTypes.string,\n    link: PropTypes.string,\n    date: PropTypes.string,\n    keywords: PropTypes.array\n}\n\n// EXPORT \nexport default Post","var $export = require('./_export');\nvar fails = require('./_fails');\nvar defined = require('./_defined');\nvar quot = /\"/g;\n// B.2.3.2.1 CreateHTML(string, tag, attribute, value)\nvar createHTML = function (string, tag, attribute, value) {\n  var S = String(defined(string));\n  var p1 = '<' + tag;\n  if (attribute !== '') p1 += ' ' + attribute + '=\"' + String(value).replace(quot, '&quot;') + '\"';\n  return p1 + '>' + S + '</' + tag + '>';\n};\nmodule.exports = function (NAME, exec) {\n  var O = {};\n  O[NAME] = exec(createHTML);\n  $export($export.P + $export.F * fails(function () {\n    var test = ''[NAME]('\"');\n    return test !== test.toLowerCase() || test.split('\"').length > 3;\n  }), 'String', O);\n};\n","////////////////////////////////////////////////////////////////////////////////\n// FILE: main.js\n// AUTHOR: David Ruvolo\n// CREATED: 2019-10-25\n// MODIFIED: 2019-12-15\n// PURPOSE: react component for <main> layout\n// DEPENDENCIES: NA\n// STATUS: working\n// COMMENTS: NA\n////////////////////////////////////////////////////////////////////////////////\n// BEGIN\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport \"../styles/main.scss\"\nfunction Main(props){\n    return (\n        <main id=\"main\" className={ props.className ? `main ${props.className}` : \"main\"} aria-label=\"main content\" style={props.style ? props.style : null}>\n            {props.children}\n        </main>\n    )\n}\n\n// set props\nMain.propTypes = {\n    className: PropTypes.string\n}\n\n// export\nexport default Main","////////////////////////////////////////////////////////////////////////////////\n// FILE: sidebar.js\n// AUTHOR: David Ruvolo\n// CREATED: 2019-10-25\n// MODIFIED: 2019-11-14\n// PURPOSE: react component for sidebar\n// DEPENDENCIES: react\n// STATUS: working\n// COMMENTS: NA\n////////////////////////////////////////////////////////////////////////////////\n// BEGIN\nimport React from \"react\"\nfunction Sidebar(props){\n    return (\n        <aside className={props.className ? `sidebar ${props.className}` : \"sidebar\"}>\n            <section className=\"sidebar-content\">\n                {props.children}\n            </section>\n        </aside>\n    )\n}\nexport default Sidebar","// import PropTypes from \"prop-types\"\n////////////////////////////////////////////////////////////////////////////////\n// FILE: searchForm.js\n// AUTHOR: David Ruvolo\n// CREATED: 2019-11-06\n// MODIFIED: 2020-01-29\n// PURPOSE: react component for search\n// DEPENDENCIES: react\n// STATUS: working\n// COMMENTS: NA\n////////////////////////////////////////////////////////////////////////////////\n// BEGIN\nimport React, { Component } from 'react'\nclass Search extends Component {\n    \n    // init state\n    state = {\n        query: \"\",\n        results: [],\n    }\n\n    // prevent default function\n    handleSubmit = (event) => {\n        event.preventDefault()\n    }\n\n    // filter html elements function\n    filterPostsByString(string){\n\n        // define vars\n        let q = string.toLowerCase();\n        let data = document.querySelectorAll(\".searchable\");\n        \n        // search -- show/hide results\n        if(q === \"\"){\n            for(var e=0; e < data.length; e++){\n                data[e].style.display = \"block\";\n            }\n        } else {\n\n            // run through all \".posts\" and show/hide div based on the query\n            for(var i = 0; i < data.length; i++){\n                if(data[i].innerHTML.toLowerCase().indexOf(q) > 0){\n                    data[i].style.display = \"block\";\n                } else {\n                    data[i].style.display = \"none\";\n                }\n            }\n        }\n    }\n\n    // search event\n    search = (event) => {\n        const query = event.target.value;\n        const results = this.filterPostsByString(query);\n        this.setState({results, query})\n    }\n\n    render(){\n        return(\n        <form className=\"form\" aria-label=\"search for tutorials\" onSubmit={this.handleSubmit}>\n            <label className=\"input-label\" htmlFor=\"search\">Search for a Tutorial</label>\n            <p className=\"input-example\">Search by tag, keyword, title, date. Ex: css, 2018, editing.</p>\n            <input className=\"input input-select\" type=\"search\" name=\"search\" id=\"search\" value={this.state.query} onChange={this.search}/>\n        </form>\n        )\n    }\n}\n\nexport default Search\n","////////////////////////////////////////////////////////////////////////////////\n// FILE: resetBtn.js\n// AUTHOR: David Ruvolo\n// CREATED: 2019-11-06\n// MODIFIED: 2019-11-14\n// PURPOSE: react component for reset button\n// DEPENDENCIES: React\n// STATUS: working\n// COMMENTS: NA\n////////////////////////////////////////////////////////////////////////////////\n// BEGIN\nimport React, { Component } from 'react'\nclass Reset extends Component {\n\n    // function to reset selected tags and to show all blocks\n    resetForm(){\n\n        // gather elements\n        const tags = document.querySelectorAll(\".btn-keyword\");\n        const data = document.querySelectorAll(\".post\");\n\n        // remove classes and show all posts\n        tags.forEach(t => t.classList.remove(\"selected\"));\n        data.forEach(d => d.style.display = \"block\");\n  \n    }\n\n    reset = (event) => {\n        this.resetForm()\n    }\n\n    render() {\n        return(\n            <button id=\"reset\" className=\"btn btn-secondary\" onClick={this.reset}>Reset filters</button>\n        )\n    }\n\n}\nexport default Reset","////////////////////////////////////////////////////////////////////////////////\n// FILE: keywordButton.js\n// AUTHOR: David Ruvolo\n// CREATED: 2019-10-25\n// MODIFIED: 2019-10-25\n// PURPOSE: react component for taglist filters\n// DEPENDENCIES: see below\n// STATUS: working\n// COMMENTS: NA\n////////////////////////////////////////////////////////////////////////////////\n// BEGIN\nimport React, { Component } from 'react'\nclass KeyWordButton extends Component {\n\n    constructor(props) {\n      super(props);\n      this.state = { isActive: false}\n    }\n\n    addActiveClass() {\n      this.setState({ isActive: !this.state.isActive });\n    }\n\n    // function to filter posts by selected data-value\n    filterPostsByKeywordButton(string){\n\n      // define vars\n      let q = string.toLowerCase();\n      let data = document.querySelectorAll(\".searchable\");\n\n      // add class to selected keyword button\n      document.querySelectorAll(\".menu-btn\").forEach(b => b.classList.remove(\"selected\"));\n      document.querySelector(`*[query='${this.props.keyword}']`).classList.add(\"selected\");\n      \n      // search -- show/hide results\n      if(q === \"\"){\n          for(var e=0; e < data.length; e++){\n              data[e].style.display = \"block\";\n          }\n      } else {\n\n          // run through all \".posts\" and show/hide div based on the query\n          for(var i = 0; i < data.length; i++){\n              if(data[i].innerHTML.toLowerCase().indexOf(q) > 0){\n                  data[i].style.display = \"block\";\n              } else {\n                  data[i].style.display = \"none\";\n              }\n          }\n      }\n  }\n\n    filterByKeyword = (event) => {\n      const query = this.props.keyword;\n      this.filterPostsByKeywordButton(query);\n    }\n\n    render() {\n        return(\n          <button className=\"btn btn-keyword\" key={this.props.keyword} query={this.props.keyword} onClick={this.filterByKeyword}>\n            {this.props.keyword}\n          </button>\n        )\n    }\n\n}\n\nexport default KeyWordButton\n","////////////////////////////////////////////////////////////////////////////////\n// FILE: tagsList.js\n// AUTHOR: David Ruvolo\n// CREATED: 2019-10-25\n// MODIFIED: 2019-12-15\n// PURPOSE: react component for tags list, i.e., list of keywords\n// DEPENDENCIES: see below\n// STATUS: in.progress\n// COMMENTS: NA\n////////////////////////////////////////////////////////////////////////////////\n// BEGIN\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport KeyWordButton from \"./keywordButton\"\nfunction Taglist(props){\n    return (\n        <ul className={ props.className ? `taglist ${props.className}` : \"taglist\"}>\n            {\n              props.keywords.map((key, k) => (\n                <li key={k} className=\"taglist-item\">\n                  <KeyWordButton key={k} keyword={key} />\n                </li>\n              ))\n            }\n        </ul>\n    )\n}\n\n// set props\nTaglist.propTypes = {\n  className: PropTypes.string,\n  keywords: PropTypes.array.isRequired\n}\n\n// export\nexport default Taglist","////////////////////////////////////////////////////////////////////////////////\n// FILE: tutorials.js\n// AUTHOR: David Ruvolo\n// CREATED: 2019-11-05\n// MODIFIED: 2020-01-29\n// PURPOSE: tutorials index page\n// DEPENDENCIES: see below\n// STATUS: working\n// COMMENTS: NA\n////////////////////////////////////////////////////////////////////////////////\n// BEGIN\nimport React from \"react\"\nimport { graphql } from \"gatsby\"\n\n// import layout components\nimport App from \"../../components/layouts/app\"\nimport Hero from \"../../components/layouts/hero-alt\"\nimport Main from \"../../components/layouts/main\"\nimport Sidebar from \"../../components/layouts/sidebar\"\nimport Search from \"../../components/elements/searchForm\"\nimport Reset from \"../../components/elements/resetBtn\"\nimport TagsList from \"../../components/elements/tagsList\"\nimport Post from \"../../components/layouts/post-entry\"\n\nfunction Tutorials(props){\n\n    // get posts data\n\tconst postList = props.data.allMarkdownRemark;\n\tconst keywords = Array.from([...new Set(postList.edges.map(n => n.node.frontmatter.keywords).flat().sort())])\n\n    return (\n        <App\n\t\t\ttitle=\"tutorials\"\n\t\t\tdescription=\"A collection of methods and techniques for building shiny apps\"\n\t\t\tauthor=\"dcruvolo\"\n\t\t\tkeywords={[\"shiny\", \"shiny tutorials\", \"r\", \"shiny examples\"]}\n\t\t>\n\t\t\t<Hero title=\"Available Tutorials\" text=\"Below you can find all of the available tutorials. Search for a tutorial by name, topic, date, or keyword.\"/>\n\t\t\t<Main>\n\t\t\t\t<div className=\"flex flex-30x70-layout tutorial-index\">\n\t\t\t\t\t<Sidebar className=\"flex-child tutorial-index-sidebar\">\n\t\t\t\t\t\t<h2 className=\"menu-title\">Filter Tutorials</h2>\n\t\t\t\t\t\t<p className=\"menu-caption\">Select a keyword</p>\n\t\t\t\t\t\t<TagsList keywords={ keywords } />\n\t\t\t\t\t\t<Reset />\n\t\t\t\t\t</Sidebar>\n\t\t\t\t\t<article className=\"flex-child tutorial-index-posts\">\n\t\t\t\t\t\t<Search />\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t// map nodes -> blog post lists\n\t\t\t\t\t\t\tpostList.edges.map(({ node }, i) => (\n\t\t\t\t\t\t\t\t<Post\n\t\t\t\t\t\t\t\t\tclassName=\"searchable\"\n\t\t\t\t\t\t\t\t\ttitle={node.frontmatter.title}\n\t\t\t\t\t\t\t\t\ttitleIsLink={true}\n\t\t\t\t\t\t\t\t\tlink={node.fields.slug}\n\t\t\t\t\t\t\t\t\tlinkLabel=\"Read\"\n\t\t\t\t\t\t\t\t\tabstract={node.frontmatter.abstract}\n\t\t\t\t\t\t\t\t\tdate={node.frontmatter.date}\n\t\t\t\t\t\t\t\t\tkeywords={node.frontmatter.keywords}\n\t\t\t\t\t\t\t\t\tid={`${node.frontmatter.title}-${i}`}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t))\n\t\t\t\t\t\t}\n\t\t\t\t\t</article>\n\t\t\t\t</div>\n\t\t\t</Main>\n\t\t</App>\n    )\n}\n\nexport default Tutorials\n\n// define query\nexport const MainIndex = graphql`\n  query MainIndex {\n    allMarkdownRemark(sort: { order: DESC, fields: [frontmatter___date] }) {\n      edges {\n        node {\n          fields {\n            slug\n          }\n          frontmatter {\n\t\t\tabstract\n            date\n            title\n\t\t\tkeywords\n\t\t\tupdated\n          }\n        }\n      }\n    }\n  }\n`","'use strict';\n// B.2.3.10 String.prototype.link(url)\nrequire('./_string-html')('link', function (createHTML) {\n  return function link(url) {\n    return createHTML(this, 'a', 'href', url);\n  };\n});\n"],"sourceRoot":""}