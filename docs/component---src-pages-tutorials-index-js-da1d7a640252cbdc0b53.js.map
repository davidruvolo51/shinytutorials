{"version":3,"sources":["webpack:///./src/components/layouts/hero-alt.js","webpack:///./src/components/layouts/sidebar.js","webpack:///./src/components/elements/searchForm.js","webpack:///./src/components/elements/resetBtn.js","webpack:///./src/components/elements/keywordButton.js","webpack:///./src/components/elements/tagsList.js","webpack:///./src/pages/tutorials/index.js"],"names":["Header","props","className","title","subtitle","text","Sidebar","children","Search","state","query","results","handleSubmit","event","preventDefault","search","target","value","filterPostsByString","setState","string","q","toLowerCase","data","document","querySelectorAll","e","length","style","display","i","innerHTML","indexOf","render","aria-label","onSubmit","this","htmlFor","type","name","id","onChange","Component","Reset","reset","resetForm","tags","forEach","t","classList","remove","d","onClick","KeyWordButton","filterByKeyword","keyword","filterPostsByKeywordButton","isActive","addActiveClass","b","querySelector","add","key","Taglist","keywords","map","k","Tutorials","postList","allMarkdownRemark","Array","from","Set","edges","n","node","frontmatter","flat","sort","description","author","titleIsLink","link","fields","slug","linkLabel","abstract","date","MainIndex"],"mappings":"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","file":"component---src-pages-tutorials-index-js-da1d7a640252cbdc0b53.js","sourcesContent":["////////////////////////////////////////////////////////////////////////////////\n// FILE: hero-alt.js\n// AUTHOR: David Ruvolo\n// CREATED: 2019-11-05\n// MODIFIED: 2019-12-15\n// PURPOSE: hero-alt is a text based hero for other pages and sections\n// DEPENDENCIES: see below\n// STATUS: working\n// COMMENTS: NA\n////////////////////////////////////////////////////////////////////////////////\n// BEGIN\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nfunction Header(props){\n    return (\n        <header className={props.className ? `hero hero-text ${props.className}` : \"hero hero-text\"}>\n            <div className=\"hero-content\">\n                <h1>{props.title}</h1>\n                {\n                    props.subtitle\n                        ? (\n                            <h2>{props.subtitle}</h2>\n                        )\n                        : null\n                }\n                {\n                    props.text\n                        ? (\n                            <p className=\"hero-text\">{props.text}</p>\n                        )\n                        : null\n                }\n            </div>\n        </header>\n    )\n}\n\n// props\nHeader.propTypes = {\n    className: PropTypes.string,\n    title: PropTypes.string,\n    subtitle: PropTypes.string,\n    text: PropTypes.string\n}\n\n// export\nexport default Header","////////////////////////////////////////////////////////////////////////////////\n// FILE: sidebar.js\n// AUTHOR: David Ruvolo\n// CREATED: 2019-10-25\n// MODIFIED: 2019-11-14\n// PURPOSE: react component for sidebar\n// DEPENDENCIES: react\n// STATUS: working\n// COMMENTS: NA\n////////////////////////////////////////////////////////////////////////////////\n// BEGIN\nimport React from \"react\"\nfunction Sidebar(props){\n    return (\n        <aside className={props.className ? `sidebar ${props.className}` : \"sidebar\"}>\n            <section className=\"sidebar-content\">\n                {props.children}\n            </section>\n        </aside>\n    )\n}\nexport default Sidebar","// import PropTypes from \"prop-types\"\n////////////////////////////////////////////////////////////////////////////////\n// FILE: searchForm.js\n// AUTHOR: David Ruvolo\n// CREATED: 2019-11-06\n// MODIFIED: 2020-01-29\n// PURPOSE: react component for search\n// DEPENDENCIES: react\n// STATUS: working\n// COMMENTS: NA\n////////////////////////////////////////////////////////////////////////////////\n// BEGIN\nimport React, { Component } from 'react'\nclass Search extends Component {\n    \n    // init state\n    state = {\n        query: \"\",\n        results: [],\n    }\n\n    // prevent default function\n    handleSubmit = (event) => {\n        event.preventDefault()\n    }\n\n    // filter html elements function\n    filterPostsByString(string){\n\n        // define vars\n        let q = string.toLowerCase();\n        let data = document.querySelectorAll(\".searchable\");\n        \n        // search -- show/hide results\n        if(q === \"\"){\n            for(var e=0; e < data.length; e++){\n                data[e].style.display = \"block\";\n            }\n        } else {\n\n            // run through all \".posts\" and show/hide div based on the query\n            for(var i = 0; i < data.length; i++){\n                if(data[i].innerHTML.toLowerCase().indexOf(q) > 0){\n                    data[i].style.display = \"block\";\n                } else {\n                    data[i].style.display = \"none\";\n                }\n            }\n        }\n    }\n\n    // search event\n    search = (event) => {\n        const query = event.target.value;\n        const results = this.filterPostsByString(query);\n        this.setState({results, query})\n    }\n\n    render(){\n        return(\n        <form className=\"form\" aria-label=\"search for tutorials\" onSubmit={this.handleSubmit}>\n            <label className=\"input-label\" htmlFor=\"search\">Search for a Tutorial</label>\n            <p className=\"input-example\">Search by tag, keyword, title, date. Ex: css, 2018, editing.</p>\n            <input className=\"input input-select\" type=\"search\" name=\"search\" id=\"search\" value={this.state.query} onChange={this.search}/>\n        </form>\n        )\n    }\n}\n\nexport default Search\n","////////////////////////////////////////////////////////////////////////////////\n// FILE: resetBtn.js\n// AUTHOR: David Ruvolo\n// CREATED: 2019-11-06\n// MODIFIED: 2019-11-14\n// PURPOSE: react component for reset button\n// DEPENDENCIES: React\n// STATUS: working\n// COMMENTS: NA\n////////////////////////////////////////////////////////////////////////////////\n// BEGIN\nimport React, { Component } from 'react'\nclass Reset extends Component {\n\n    // function to reset selected tags and to show all blocks\n    resetForm(){\n\n        // gather elements\n        const tags = document.querySelectorAll(\".btn-keyword\");\n        const data = document.querySelectorAll(\".post\");\n\n        // remove classes and show all posts\n        tags.forEach(t => t.classList.remove(\"selected\"));\n        data.forEach(d => d.style.display = \"block\");\n  \n    }\n\n    reset = (event) => {\n        this.resetForm()\n    }\n\n    render() {\n        return(\n            <button id=\"reset\" className=\"btn btn-secondary\" onClick={this.reset}>Reset filters</button>\n        )\n    }\n\n}\nexport default Reset","////////////////////////////////////////////////////////////////////////////////\n// FILE: keywordButton.js\n// AUTHOR: David Ruvolo\n// CREATED: 2019-10-25\n// MODIFIED: 2019-10-25\n// PURPOSE: react component for taglist filters\n// DEPENDENCIES: see below\n// STATUS: working\n// COMMENTS: NA\n////////////////////////////////////////////////////////////////////////////////\n// BEGIN\nimport React, { Component } from 'react'\nclass KeyWordButton extends Component {\n\n    constructor(props) {\n      super(props);\n      this.state = { isActive: false}\n    }\n\n    addActiveClass() {\n      this.setState({ isActive: !this.state.isActive });\n    }\n\n    // function to filter posts by selected data-value\n    filterPostsByKeywordButton(string){\n\n      // define vars\n      let q = string.toLowerCase();\n      let data = document.querySelectorAll(\".searchable\");\n\n      // add class to selected keyword button\n      document.querySelectorAll(\".menu-btn\").forEach(b => b.classList.remove(\"selected\"));\n      document.querySelector(`*[query='${this.props.keyword}']`).classList.add(\"selected\");\n      \n      // search -- show/hide results\n      if(q === \"\"){\n          for(var e=0; e < data.length; e++){\n              data[e].style.display = \"block\";\n          }\n      } else {\n\n          // run through all \".posts\" and show/hide div based on the query\n          for(var i = 0; i < data.length; i++){\n              if(data[i].innerHTML.toLowerCase().indexOf(q) > 0){\n                  data[i].style.display = \"block\";\n              } else {\n                  data[i].style.display = \"none\";\n              }\n          }\n      }\n  }\n\n    filterByKeyword = (event) => {\n      const query = this.props.keyword;\n      this.filterPostsByKeywordButton(query);\n    }\n\n    render() {\n        return(\n          <button className=\"btn btn-keyword\" key={this.props.keyword} query={this.props.keyword} onClick={this.filterByKeyword}>\n            {this.props.keyword}\n          </button>\n        )\n    }\n\n}\n\nexport default KeyWordButton\n","////////////////////////////////////////////////////////////////////////////////\n// FILE: tagsList.js\n// AUTHOR: David Ruvolo\n// CREATED: 2019-10-25\n// MODIFIED: 2019-12-15\n// PURPOSE: react component for tags list, i.e., list of keywords\n// DEPENDENCIES: see below\n// STATUS: in.progress\n// COMMENTS: NA\n////////////////////////////////////////////////////////////////////////////////\n// BEGIN\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport KeyWordButton from \"./keywordButton\"\nfunction Taglist(props){\n    return (\n        <ul className={ props.className ? `taglist ${props.className}` : \"taglist\"}>\n            {\n              props.keywords.map((key, k) => (\n                <li key={k} className=\"taglist-item\">\n                  <KeyWordButton key={k} keyword={key} />\n                </li>\n              ))\n            }\n        </ul>\n    )\n}\n\n// set props\nTaglist.propTypes = {\n  className: PropTypes.string,\n  keywords: PropTypes.array.isRequired\n}\n\n// export\nexport default Taglist","////////////////////////////////////////////////////////////////////////////////\n// FILE: tutorials.js\n// AUTHOR: David Ruvolo\n// CREATED: 2019-11-05\n// MODIFIED: 2020-01-29\n// PURPOSE: tutorials index page\n// DEPENDENCIES: see below\n// STATUS: working\n// COMMENTS: NA\n////////////////////////////////////////////////////////////////////////////////\n// BEGIN\nimport React from \"react\"\nimport { graphql } from \"gatsby\"\n\n// import layout components\nimport App from \"../../components/layouts/app\"\nimport Hero from \"../../components/layouts/hero-alt\"\nimport Main from \"../../components/layouts/main\"\nimport Sidebar from \"../../components/layouts/sidebar\"\nimport Search from \"../../components/elements/searchForm\"\nimport Reset from \"../../components/elements/resetBtn\"\nimport TagsList from \"../../components/elements/tagsList\"\nimport Post from \"../../components/layouts/post-entry\"\n\nfunction Tutorials(props){\n\n    // get posts data\n\tconst postList = props.data.allMarkdownRemark;\n\tconst keywords = Array.from([...new Set(postList.edges.map(n => n.node.frontmatter.keywords).flat().sort())])\n\n    return (\n        <App\n\t\t\ttitle=\"tutorials\"\n\t\t\tdescription=\"A collection of methods and techniques for building shiny apps\"\n\t\t\tauthor=\"dcruvolo\"\n\t\t\tkeywords={[\"shiny\", \"shiny tutorials\", \"r\", \"shiny examples\"]}\n\t\t>\n\t\t\t<Hero title=\"Available Tutorials\" text=\"Below you can find all of the available tutorials. Search for a tutorial by name, topic, date, or keyword.\"/>\n\t\t\t<Main>\n\t\t\t\t<div className=\"flex flex-30x70-layout tutorial-index\">\n\t\t\t\t\t<Sidebar className=\"flex-child tutorial-index-sidebar\">\n\t\t\t\t\t\t<h2 className=\"menu-title\">Filter Tutorials</h2>\n\t\t\t\t\t\t<p className=\"menu-caption\">Select a keyword</p>\n\t\t\t\t\t\t<TagsList keywords={ keywords } />\n\t\t\t\t\t\t<Reset />\n\t\t\t\t\t</Sidebar>\n\t\t\t\t\t<article className=\"flex-child tutorial-index-posts\">\n\t\t\t\t\t\t<Search />\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t// map nodes -> blog post lists\n\t\t\t\t\t\t\tpostList.edges.map(({ node }, i) => (\n\t\t\t\t\t\t\t\t<Post\n\t\t\t\t\t\t\t\t\tclassName=\"searchable\"\n\t\t\t\t\t\t\t\t\ttitle={node.frontmatter.title}\n\t\t\t\t\t\t\t\t\ttitleIsLink={true}\n\t\t\t\t\t\t\t\t\tlink={node.fields.slug}\n\t\t\t\t\t\t\t\t\tlinkLabel=\"Read\"\n\t\t\t\t\t\t\t\t\tabstract={node.frontmatter.abstract}\n\t\t\t\t\t\t\t\t\tdate={node.frontmatter.date}\n\t\t\t\t\t\t\t\t\tkeywords={node.frontmatter.keywords}\n\t\t\t\t\t\t\t\t\tid={`${node.frontmatter.title}-${i}`}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t))\n\t\t\t\t\t\t}\n\t\t\t\t\t</article>\n\t\t\t\t</div>\n\t\t\t</Main>\n\t\t</App>\n    )\n}\n\nexport default Tutorials\n\n// define query\nexport const MainIndex = graphql`\n  query MainIndex {\n    allMarkdownRemark(sort: { order: DESC, fields: [frontmatter___date] }) {\n      edges {\n        node {\n          fields {\n            slug\n          }\n          frontmatter {\n\t\t\tabstract\n            date\n            title\n\t\t\tkeywords\n\t\t\tupdated\n          }\n        }\n      }\n    }\n  }\n`"],"sourceRoot":""}