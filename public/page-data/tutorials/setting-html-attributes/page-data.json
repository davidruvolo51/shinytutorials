{"componentChunkName":"component---src-components-tutorials-js","path":"/tutorials/setting-html-attributes/","result":{"data":{"markdownRemark":{"html":"<h2>Contents</h2>\n<ol>\n<li><a href=\"#about\">Why would I need this?</a></li>\n<li>\n<p><a href=\"#work\">How does this app work?</a></p>\n<ol>\n<li><a href=\"#work-r-func\">Define an R function to generate the required HTML</a></li>\n<li><a href=\"#work-js-func\">Write a JavaScript function that updates the document's attributes</a></li>\n<li><a href=\"#work-shiny-app\">Integrate the R and JS functions into the app</a></li>\n</ol>\n</li>\n<li><a href=\"#know\">What do I need to know before I integrate this into my app?</a></li>\n<li><a href=\"#run\">How do I run the demo</a></li>\n<li><a href=\"#further-reading\">Further reading</a></li>\n</ol>\n<!-- endexcerpt -->\n<span id=\"about\" />\n<h2>Why would I need this?</h2>\n<p>Recently, I have been focusing on improving the accessibility of shiny applications. When developing web-based projects, I use the <a href=\"https://wave.webaim.org\">Web Accessibility Evaluation Tool (or WAVE)</a> to make sure the content is accessible. This helps identify errors in the page structure and appearance. For building custom Shiny applications, using WAVE or other similar tool is essential. However, running the WAVE extension on shiny apps will always return the error: \"Document language missing\". To describe this error and how it can be fixed, let's take a look at the basic structure of a web document.</p>\n<p>All websites, including shiny apps, have the same basic HTML structure: the document declaration (or <code>&#x3C;!DOCTYPE *></code>), the root element <code>&#x3C;html></code>, a <code>&#x3C;head></code> element (for defining meta properties, loading external files, etc.), and the <code>&#x3C;body></code> of the document (where all content goes).</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token doctype\">&lt;!DOCTYPE html></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>html</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>head</span><span class=\"token punctuation\">></span></span>...<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>head</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">></span></span>...<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>html</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p>By default, the document language is unknown. Specifying the language does not only follow good web development practices, but it is important for individuals who use screen readers as \"Identifying the language of a page allows screen readers to read the content in the appropriate language\" (WAVE FireFox extension, accessed 17 July 2020). Setting the document language is also important if you have content that is written in one or more languages. To specify the language, add the property <code>lang</code> to the <code>&#x3C;html></code> element.</p>\n<p>In addition to language, it is important to specify the direction of the content (either \"left to right\" or \"right to left\"). The direction of the content can be defined by adding the attribute <code>dir</code> to the <code>&#x3C;html></code> element by using \"ltr\" for left-to-right content or \"rtl\" for right-to-left content.</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token doctype\">&lt;!DOCTYPE html></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>html</span> <span class=\"token attr-name\">lang</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>en<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">dir</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>ltr<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>head</span><span class=\"token punctuation\">></span></span>...<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>head</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">></span></span>...<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>html</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p>Adding the <code>lang</code> and <code>dir</code> attributes in shiny applications is not as easy as editing an HTML document. Shiny does not set the document language or direction by default nor is there a straightforward way to do so. Therefore, we must set these values using JavaScript.</p>\n<p>In this tutorial, we will develop a simple shiny app that allows you to set and modify the document's HTML attributes using JavaScript. We will create an R function that will automate this process and write a couple of JavaScript functions to help process these values.</p>\n<span id=\"work\" />\n<h2>How does this app work?</h2>\n<p>To build the app, here is what we will go over.</p>\n<ol>\n<li>Define an R Function to generate the required HTML</li>\n<li>Write a JavaScript function that updates the document's attributes</li>\n<li>Integrate the R and JS functions into the app</li>\n</ol>\n<span id=\"work-r-func\" />\n<h3>Define an R function to generate the required HTML</h3>\n<p>First, we will write an R function that renders the desired attribute values into an HTML element, which can be added to the document using JavaScript. This will make the process of modifying attribute values easier and allow you to add or remove attributes depending on the needs of your shiny app. </p>\n<p>In this example, we will be setting the HTML attributes <code>lang</code> and <code>dir</code>. The <a href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/lang\">lang attribute</a> allows you to specify the language of the content. The <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/dir\">dir attribute</a> is the direction of the content. Direction can be \"ltr\" (for left-to-right content), \"rtl\" (for right-to-left content), or \"auto\".</p>\n<p>I will give this R function a simple name <code>set_html_attribs</code> and set default values for language (<code>en</code> for English) and direction (<code>ltr</code> for left-to-right). The output of this R function is a hidden span element that has the html attributes defined as custom data attributes (visit <a href=\"https://developer.mozilla.org/en-US/docs/Learn/HTML/Howto/Use_data_attributes\">Mozilla's guide on data attributes</a> for more information). The span element will be assigned a unique ID that will be used to select element in the JavaScript function.</p>\n<div class=\"gatsby-highlight\" data-language=\"r\"><pre class=\"language-r\"><code class=\"language-r\">set_html_attribs <span class=\"token operator\">&lt;-</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span>lang <span class=\"token operator\">=</span> <span class=\"token string\">\"en\"</span><span class=\"token punctuation\">,</span> dir <span class=\"token operator\">=</span> <span class=\"token string\">\"ltr\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n    <span class=\"token comment\"># validate</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>is.character<span class=\"token punctuation\">(</span>lang<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> stop<span class=\"token punctuation\">(</span><span class=\"token string\">\"argument 'lang' must be a character\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>is.character<span class=\"token punctuation\">(</span>dir<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> stop<span class=\"token punctuation\">(</span><span class=\"token string\">\"argument 'dir' must be a character\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>dir <span class=\"token percent-operator operator\">%in%</span> c<span class=\"token punctuation\">(</span><span class=\"token string\">\"ltr\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"rtl\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"auto\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        stop<span class=\"token punctuation\">(</span><span class=\"token string\">\"value for 'dir' is invalid. Use 'ltr', 'rtl', or 'dir'.\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\"># render hidden inline &lt;span> element</span>\n    tags<span class=\"token operator\">$</span>span<span class=\"token punctuation\">(</span>\n        id <span class=\"token operator\">=</span> <span class=\"token string\">\"shiny__html_attribs\"</span><span class=\"token punctuation\">,</span>\n        style <span class=\"token operator\">=</span> <span class=\"token string\">\"display: none;\"</span><span class=\"token punctuation\">,</span>\n        `data<span class=\"token operator\">-</span>html<span class=\"token operator\">-</span>lang` <span class=\"token operator\">=</span> lang<span class=\"token punctuation\">,</span>\n        `data<span class=\"token operator\">-</span>html<span class=\"token operator\">-</span>dir` <span class=\"token operator\">=</span> dir\n    <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<span id=\"work-js-func\" />\n<h3>Write a JavaScript function that updates the document's attributes</h3>\n<p>Now we will create a JavaScript function that finds the span element and extracts the values from the custom data attributes. Using these values, we can set the language and direction attributes to the <code>&#x3C;html></code> element.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">function</span> <span class=\"token function\">set_html_attribs</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> targetElem <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementsByTagName</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"html\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> refElem <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"shiny__html_attribs\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    targetElem<span class=\"token punctuation\">.</span>lang <span class=\"token operator\">=</span> refElem<span class=\"token punctuation\">.</span><span class=\"token function\">getAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"data-html-lang\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    targetElem<span class=\"token punctuation\">.</span>dir <span class=\"token operator\">=</span> refElem<span class=\"token punctuation\">.</span><span class=\"token function\">getAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"data-html-dir\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Next, create an event listener that runs the <code>set_html_attribs</code> function only when the page is loaded (i.e., <code>DOMContentLoaded</code>). Use the option <code>once</code> to remove the event after it has completed.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">window<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"DOMContentLoaded\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">set_html_attribs</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> once<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<span id=\"work-shiny-app\" />\n<h3>Integrate the R and JS functions into the app</h3>\n<p>Finally, let's build the demo app. Load the R function into the app and call the function <code>set_html_attribs</code> at the start of the shiny UI. At the end of the ShinyUI, call the JS file. (You may need to wrap your app in <code>tagList</code> if using other ShinyUI layouts.) </p>\n<p>Run the app and view the page source to find the <code>&#x3C;html></code> tag (it will be at the top of the page). This tag will now have the attributes <code>lang</code> and <code>dir</code>.</p>\n<div class=\"gatsby-highlight\" data-language=\"r\"><pre class=\"language-r\"><code class=\"language-r\"><span class=\"token comment\"># pkgs</span>\nlibrary<span class=\"token punctuation\">(</span>shiny<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># source function</span>\nsource<span class=\"token punctuation\">(</span><span class=\"token string\">\"set_html_attribs.R\"</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># ui</span>\nui <span class=\"token operator\">&lt;-</span> tagList<span class=\"token punctuation\">(</span>\n    set_html_attribs<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    tags<span class=\"token operator\">$</span>h2<span class=\"token punctuation\">(</span><span class=\"token string\">\"Setting HTML Attributes\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    tags<span class=\"token operator\">$</span>p<span class=\"token punctuation\">(</span>\n        <span class=\"token string\">\"Use 'view page source' to see where the html attributes were added.\"</span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    tags<span class=\"token operator\">$</span>script<span class=\"token punctuation\">(</span>src <span class=\"token operator\">=</span> <span class=\"token string\">\"set_html_attribs.js\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># server</span>\nserver <span class=\"token operator\">&lt;-</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span>input<span class=\"token punctuation\">,</span> output<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\"># app</span>\nshinyApp<span class=\"token punctuation\">(</span>ui<span class=\"token punctuation\">,</span> server<span class=\"token punctuation\">)</span></code></pre></div>\n<span id=\"know\" />\n<h2>What do I need to know before I integrate this into my app?</h2>\n<p>You may want to add other important document tags for responsive design, good semantic HTML practices and for ensuring that your applications are accessible. These elements and attributes are not generated by shiny and there is not a clear way to add these without using JavaScript. For many of my apps, the <code>set_html_attribs</code> function looks like this.</p>\n<div class=\"gatsby-highlight\" data-language=\"r\"><pre class=\"language-r\"><code class=\"language-r\">set_html_attribs <span class=\"token operator\">&lt;-</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span>title <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span> lang <span class=\"token operator\">=</span> <span class=\"token string\">\"en\"</span><span class=\"token punctuation\">,</span> dir <span class=\"token operator\">=</span> <span class=\"token string\">\"ltr\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n    <span class=\"token comment\"># validate</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>is.character<span class=\"token punctuation\">(</span>title<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> stop<span class=\"token punctuation\">(</span><span class=\"token string\">\"arugment 'title' must be a string\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>title <span class=\"token operator\">==</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span> warning<span class=\"token punctuation\">(</span><span class=\"token string\">\"value for 'title' is missing.\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>is.character<span class=\"token punctuation\">(</span>lang<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> stop<span class=\"token punctuation\">(</span><span class=\"token string\">\"argument 'lang' must be a character\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>is.character<span class=\"token punctuation\">(</span>dir<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> stop<span class=\"token punctuation\">(</span><span class=\"token string\">\"argument 'dir' must be a character\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>dir <span class=\"token percent-operator operator\">%in%</span> c<span class=\"token punctuation\">(</span><span class=\"token string\">\"ltr\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"rtl\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"auto\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        stop<span class=\"token punctuation\">(</span><span class=\"token string\">\"value for 'dir' is invalid. Use 'ltr', 'rtl', or 'dir'.\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\"># content to append to &lt;head> + html attributes </span>\n    tagList<span class=\"token punctuation\">(</span>\n\n        <span class=\"token comment\"># &lt;head></span>\n        tags<span class=\"token operator\">$</span>head<span class=\"token punctuation\">(</span>\n            \n            <span class=\"token comment\"># document encoding</span>\n            tags<span class=\"token operator\">$</span>meta<span class=\"token punctuation\">(</span>charset <span class=\"token operator\">=</span> <span class=\"token string\">\"utf-8\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\n            <span class=\"token comment\"># for MS Edge</span>\n            tags<span class=\"token operator\">$</span>meta<span class=\"token punctuation\">(</span>\n                `http<span class=\"token operator\">-</span>quiv` <span class=\"token operator\">=</span> <span class=\"token string\">\"x-ua-compatible\"</span><span class=\"token punctuation\">,</span>\n                content <span class=\"token operator\">=</span> <span class=\"token string\">\"ie=edge\"</span>\n            <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\n            <span class=\"token comment\"># mobile optimization</span>\n            tags<span class=\"token operator\">$</span>meta<span class=\"token punctuation\">(</span>\n                name <span class=\"token operator\">=</span> <span class=\"token string\">\"viewport\"</span><span class=\"token punctuation\">,</span>\n                content <span class=\"token operator\">=</span> <span class=\"token string\">\"width=device-width, initial-scale=1\"</span>\n            <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\n            <span class=\"token comment\"># link to stylesheets</span>\n            tags<span class=\"token operator\">$</span>link<span class=\"token punctuation\">(</span>\n                rel <span class=\"token operator\">=</span> <span class=\"token string\">\"stylesheet\"</span><span class=\"token punctuation\">,</span>\n                href <span class=\"token operator\">=</span> <span class=\"token string\">\"path/to/stylesheet\"</span>\n            <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\n            <span class=\"token comment\"># document title</span>\n            tags<span class=\"token operator\">$</span>title<span class=\"token punctuation\">(</span>title<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\n        <span class=\"token comment\"># render hidden inline &lt;span> element</span>\n        tags<span class=\"token operator\">$</span>span<span class=\"token punctuation\">(</span>\n            id <span class=\"token operator\">=</span> <span class=\"token string\">\"shiny__html_attribs\"</span><span class=\"token punctuation\">,</span>\n            style <span class=\"token operator\">=</span> <span class=\"token string\">\"display: none;\"</span><span class=\"token punctuation\">,</span>\n            `data<span class=\"token operator\">-</span>html<span class=\"token operator\">-</span>lang` <span class=\"token operator\">=</span> lang<span class=\"token punctuation\">,</span>\n            `data<span class=\"token operator\">-</span>html<span class=\"token operator\">-</span>dir` <span class=\"token operator\">=</span> dir\n        <span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Depending on the language of your application, you may need to specify a language subtag for regional dialects. If this is the case, I would recommend using the <a href=\"https://r12a.github.io/app-subtags/\">Language Tag and Subtag finder</a> to determine the appropriate language code.</p>\n<span id=\"run\" />\n<h2>How do I run the example?</h2>\n<p>You can run this demo by cloning the <a href=\"https://github.com/davidruvolo51/shinyAppTutorials\">GitHub repository</a>, opening the R project in <code>setting-html-attributes</code> folder, and clicking \"Run App\". Alternatively, you can run the app through the R console using the following command.</p>\n<div class=\"gatsby-highlight\" data-language=\"r\"><pre class=\"language-r\"><code class=\"language-r\">shiny<span class=\"token operator\">::</span>runGithub<span class=\"token punctuation\">(</span>\n    repo<span class=\"token operator\">=</span><span class=\"token string\">\"shinyAppTutorials\"</span><span class=\"token punctuation\">,</span>\n    username<span class=\"token operator\">=</span><span class=\"token string\">\"davidruvolo51\"</span><span class=\"token punctuation\">,</span>\n    subdir<span class=\"token operator\">=</span><span class=\"token string\">\"setting-html-attributes\"</span>\n<span class=\"token punctuation\">)</span></code></pre></div>\n<span id=\"further-reading\" />\n<h2>Further Reading</h2>\n<p>Here is a list of all resources linked in this tutorial and more.</p>\n<ul>\n<li><a href=\"https://www.iana.org/assignments/language-subtag-registry/language-subtag-registry\">IANA's Subtag Registry</a></li>\n<li><a href=\"https://r12a.github.io/app-subtags/\">Language Tag and Subtag finder</a></li>\n<li><a href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/dir\">Mozilla's guide on the direction attribute</a></li>\n<li><a href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/lang\">Mozilla's guide on the language attribute</a></li>\n<li><a href=\"https://www.w3.org/International/questions/qa-html-language-declarations\">W3's guide on specifying a language</a></li>\n<li><a href=\"https://www.w3.org/International/questions/qa-html-dir\">W3's guide on specifying the dir attribute</a></li>\n<li><a href=\"https://www.w3.org/International/questions/qa-scripts.en\">W3's QA on specifying right-to-left content</a></li>\n<li><a href=\"https://www.w3.org/TR/html51/dom.html#the-lang-and-xmllang-attributes\">W3's specifications on the language attribute</a></li>\n</ul>","frontmatter":{"title":"Setting Document Attributes","subtitle":"Improving the accessibility of Shiny apps","abstract":"When evaluating Shiny applications in terms of web accessibility, assessment tools will always throw an error: 'Document language missing'. Shiny does not set this attribute and others like it by default. In this tutorial, we will learn how to fix this.","date":"2020-07-28","updated":"2020-07-28","keywords":["js","a11y"]},"fields":{"readingTime":{"minutes":7.015}}}},"pageContext":{"slug":"/tutorials/setting-html-attributes/"}}}